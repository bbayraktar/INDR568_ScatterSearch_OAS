import java.io.FileNotFoundException;
import java.util.ArrayList;


public class SS_OAS 
{
	static ArrayList<Solution> pop;
	static ArrayList<Solution> ref=new ArrayList<>();
	static ArrayList<Solution> oldref=new ArrayList<>();
	static ArrayList<ArrayList<Solution>> Subsets=new ArrayList<>();
	static ArrayList<Solution> pool;
	
	static int popsize=30;
	static int refsize=10;
	static boolean cont=true;

	static int idg=0;
	static int num = GetData.Data[0];

	static class Order implements Cloneable
	{
		int id;
		double r;
		double p;
		double e;
		double d;
		double b;
		double w;
		
		int in;
		int seq;
		double beg;
		double fin;
		
		public Order()
		{
			id=idg++;
			r = GetData.r[id];
			p = GetData.p[id];
			e = GetData.e[id];
			d = GetData.d[id];
			b = GetData.b[id];
			w = GetData.w[id];
		}
		
		public Object clone(){  
		    try{  
		        return super.clone();  
		    }catch(Exception e){ 
		        return null; 
		    }
		}
	}

	static class Solution implements Cloneable
	{
		ArrayList<Order> sol = new ArrayList<>();
		double obj;
		double dist=num*3;
		
		public Object clone(){  
		    try{  
		        return super.clone();  
		    }catch(Exception e){ 
		        return null; 
		    }
		}
	}

	public static void main(String[] args) throws FileNotFoundException
	{
		GetData.Get_Data();
		DiversificationGeneration.DiversificationGenerationMethod();
		Improvement.ImprovementMethod();
		ReferenceSetUpdate.ReferenceSetUpdateMethod();
		while(cont)
		{
			SubsetGeneration.SubsetGenerator();
			SolutionCombination.SolutionCombinationMethod();
			System.out.println(pop.get(0).obj + " " + pop.size());
			ReferenceSetUpdate.ReferenceSetUpdateMethod();
			ReferenceSetUpdate.isRef(ref, oldref);
		}
	}
}